#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/* Base */
#define b 0

/* Navigation */
#define n 1

/* Symbols */
#define s 2

/* Numbers */
#define u 3

/* Scroll */
#define l 4

/* Sniper */
#define i 5

&sl {
  release-after-ms = <250>;
};

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <b n s u>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";   
        device = <&vtrackball>;
        layers = <i>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <12>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <l>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        scale-divisor = <5>;
        bindings = <&ib_wheel_scaler 1 8>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    behaviors {
        hl: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };

    chosen {
        zmk,matrix_transform = &five_column_transform;
    };

    combos {
        compatible = "zmk,combos";
        combo_esc { timeout-ms = <35>; key-positions = <1 2>; bindings = <&kp ESCAPE>; require-prior-idle-ms = <150>; };

        combo_lbkt { timeout-ms = <45>; key-positions = <1 11>; bindings = <&kp LBKT>; require-prior-idle-ms = <150>; };
        combo_lpar { timeout-ms = <45>; key-positions = <2 12>; bindings = <&kp LPAR>; require-prior-idle-ms = <150>; };
        combo_lbrc { timeout-ms = <45>; key-positions = <3 13>; bindings = <&kp LBRC>; require-prior-idle-ms = <150>; };
        combo_lt { timeout-ms = <45>; key-positions = <4 14>; bindings = <&kp LT>; require-prior-idle-ms = <150>; };

        combo_gt { timeout-ms = <45>; key-positions = <5 15>; bindings = <&kp GT>; require-prior-idle-ms = <150>; };
        combo_rbrc { timeout-ms = <45>; key-positions = <6 16>; bindings = <&kp RBRC>; require-prior-idle-ms = <150>; };
        combo_rpar { timeout-ms = <45>; key-positions = <7 17>; bindings = <&kp RPAR>; require-prior-idle-ms = <150>; };
        combo_rbkt { timeout-ms = <45>; key-positions = <8 18>; bindings = <&kp RBKT>; require-prior-idle-ms = <150>; };

        combo_rl_leftclk { timeout-ms = <40>; key-positions = <17 18>; bindings = <&mkp LCLK>; require-prior-idle-ms = <150>; };
        combo_rl_middleclk { timeout-ms = <40>; key-positions = <17 27>; bindings = <&mkp RCLK>; require-prior-idle-ms = <150>; };
        combo_rl_rightclk { timeout-ms = <40>; key-positions = <18 28>; bindings = <&mkp MCLK>; require-prior-idle-ms = <150>; };

        combo_scroll { timeout-ms = <40>; key-positions = <11 12>; bindings = <&tog l>; require-prior-idle-ms = <150>; };
        combo_sniper { timeout-ms = <40>; key-positions = <21 22>; bindings = <&tog i>; require-prior-idle-ms = <150>; };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
                &kp Q      &kp W      &kp E       &kp R        &kp T     &kp Y       &kp U       &kp I       &kp O      &kp P
                &hl LGUI A &hl LALT S &hl LCTRL D &hl LSHIFT F &kp G     &kp H       &hr RSHFT J &hr RCTRL K &hr RALT L &hr RGUI SEMICOLON
                &kp Z      &kp X      &kp C       &kp V        &kp B     &kp N       &kp M       &kp COMMA   &kp DOT    &kp SLASH
                                      &lt s SQT   &lt n SPACE  &lt U TAB &lt u ENTER &lt s BSPC
            >;
        };

        Navigation {
            bindings = <
                &out OUT_TOG  &trans     &trans       &trans       &trans     &trans            &trans        &trans      &trans    &trans
                &kp C_MUTE    &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &kp LEFT          &kp DOWN      &kp UP      &kp RIGHT &trans
                &trans        &trans     &trans       &trans       &trans     &kp HOME          &kp PAGE_DOWN &kp PAGE_UP &kp END   &trans
                              &trans     &trans       &trans       &kp C_STOP &kp C_PLAY_PAUSE
            >;
        };

        Symbols {
            bindings = <
                &kp CARET     &kp AMPS &kp STAR  &kp TILDE &kp PLUS  &kp PLUS  &kp AMPS  &kp STAR  &kp TILDE &kp CARET
                &kp PIPE      &kp DLLR &kp PRCNT &kp EQUAL &kp MINUS &kp MINUS &kp DLLR  &kp PRCNT &kp EQUAL &kp PIPE
                &kp BACKSLASH &kp EXCL &kp AT    &kp HASH  &kp UNDER &kp UNDER &kp EXCL  &kp AT    &kp HASH  &kp BACKSLASH
                                       &kp GRAVE &kp TILDE &trans    &kp TILDE &kp GRAVE
            >;
        };

        Numbers {
            bindings = <
                &trans &kp N7 &kp N8 &kp N9 &trans &trans &kp N7 &kp N8 &kp N9 &trans
                &trans &kp N4 &kp N5 &kp N6 &trans &kp N0 &kp N4 &kp N5 &kp N6 &trans
                &trans &kp N1 &kp N2 &kp N3 &trans &trans &kp N1 &kp N2 &kp N3 &trans
                              &trans &trans &trans &trans &trans
            >;
        };

        Scroll {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                              &trans &trans &trans &trans &trans
            >;
        };

        Sniper {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                              &trans &trans &trans &trans &trans
            >;
        };
    };
};
